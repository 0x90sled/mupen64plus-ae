********Notes about usage of SDL input plugin:
 - If one of the enabled controllers has the "mouse" general-purpose config parameters set
   to True, the plugin will hide the mouse cursor and 'grab' the mouse pointer.  The user
   may press the Left Control and Alt keys together to toggle the mouse cursor on and off.
 - If X/Y analog axes are mapped to keys, a plain keypress will simulate the joystick
   being pressed all the way to the edge.  To decrease the amount of simulated joystick
   deflection, the user may press the Left Control, Left Alt, or LeftCtrl+LeftAlt modifiers.

********Notes for supported joysticks for auto-configuration:

1. Logitech Dual Action gamepad, Logitech Cordless Rumblepad 2:
The digital pad maps to the N64 d-pad.  The left analog stick maps to the N64 analog stick.
The right analog stick maps to the C-buttons,  and the buttons 2 and 1 map to A and B.
Button 4 is the Z trigger, and the top shoulder buttons map to the left and right N64 triggers.
Button 10 is the start button.
The bottom shoulder buttons select the memory pack or rumble pak.

2. Microsoft X-Box 360 pad:
C button U (up) and C button R (right) are assigned to the Y and B buttons.
All 4 C buttons are assigned to the U and V axis (including the already configured up and right C buttons).
The Z button has been assigned to the left trigger and switching the rumble on and off can be done with the right trigger.
Because there are no other buttons left I decided to use the button click behavior of the left joystick to switch Mempak on and off.

3. N64 controller:
All controls are mapped to their proper place on the N64 controller with an Adaptoid or custom hardware with Gamecon driver.
Rumble and Memory packs can be selected with the 'r' and 'm' keys, respectively.

4. SAITEK P880:
Notes:
The gamepad doesnt have enough keys to real assign all buttons. The second 
analog stick can be used as button by pushing him insight.

General Configuration:
Digital Pad was used as N64 digital pad, First analog stick was used as N64 
Analog stick. The red button was used as N64 Start button. L and R was used 
for N64 L and R. Second analog stick axes was used for N64 C buttons and 
second "analog stick button" was used for C-down. The first column of keys was 
used for A and B and the second and third row was used for C-Buttons - except 
for the Button next to the A button which would be C-Down but got the Z 
button.

5. Playstation 3 Controller:
Left analog stick - analog stick
Right analog stick - C-pad
D-Pad - D-Pad
Cross - A
Square - B
L1 / R1 - L / R
L2 - Z
Start - Start

6. Default Keyboard interface:
Analog Pad is "Arrow Keys"
C Up/Left/Down/Right are "I", "J", "K", "L"
DPad Up/Left/Down/Right are "W", "A", "S", "D"
Z trig is "z" key
L and R trigs are "x" and "c"
Start is "Enter" ("Return")
A is "left meta"
B is "left alt"
Select Mempack = ","
Select Rumblepack = "."

********Old blight_input readme file:

                                                                      2003-01-30
blight_input: N64 input plugin using SDL (for Mupen64 atm)
================================================================================

TOC:
----
1) About
  1.1) What is this?
  1.2) What is SDL?
  1.3) What is Mupen64?

2) Installation
  2.1) How to get the latest version
  2.2) Requirements
  2.3) Compiling and installing

3) Help
  3.1) Configuring the plugin
  3.2) What kind of devices are supported?

================================================================================
1) About
--------

1.1) What is this?
  blight_input is an n64 input plugin using SDL. It should compile on any OS
  supported by SDL.

1.2) What is SDL?
  SDL is the Simple DirectMedia Layer written by Sam Lantinga.
  It provides a low-level API for audio, video, input, threads, ...
  For more information go to http://www.libsdl.org/

1.3) What is Mupen64?
  Mupen64 is an open source n64 emulator written by Hacktarux. At the moment it
  is available for Linux and Windows (some people already got it running on
  mac os x and BSD)
  Go to http://mupen64.emuation64.com/ for more infotmation!


2) Installation
---------------

2.1) How to get the latest version
  Go to http://deltaanime.ath.cx/~blight/n64 and download the latest version

2.2) Requirements
  - SDL (www.libsdl.org)

2.3) Compiling and Installing
  Unpack the source:                  tar -zxvf blight_input-X.Y.Z.tar.gz
  Change to the source directory:     cd blight_input-X.Y.Z
  Configure the package:              ./configure
  Compile it:                         make
  Install the plugin:                 make install

  This will install blight_input-X.Y.Z.so in ./src/ - copy the file into
  Mupen64's plugin directory (cp src/blight_input-X.Y.Z.so <mupen64 dir>/plugins)
  
  
3) Help
-------

3.1) Configuring the plugin
  Select "Blight's SDL input plugin vX.Y.Z" in your N64 emulator and click
  "Configure". The config dialog will pop up. Move your mouse cursor over the
  "Help" area - you will see instructions how to configure the plugin.

3.2) What kind of devices are supported?
  Any devices supported by SDL and the plugin which leaves the following:
  - Keyboard
  - Joysticks/Gamepads supported by the kernel
  - HID devices (i.e. a N64 pad connected using an adaptoid, USB joysticks and
    gamepads), maybe more

  You can assign any of the following events to trigger button presses or axis
  movements:
  - Single key press
  - joystick/gamepad button press
  - joystick/gamepad axis movement
  - joystick/gamepad hat position
  
  You can i.e assign X Axis Left to button A, Joy Hat Up to Y Axis Up, ...
  
================================================================================

I hope this helped!
  -- "off to bed" blig[h]t
  
